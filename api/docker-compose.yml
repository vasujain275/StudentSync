services:
  api:
    build: .
    container_name: studentsync-api
    env_file: .env
    environment:
      - PROD_DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - studentsync-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/v1/health",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s

  db:
    image: postgres:16-alpine
    container_name: studentsync-db
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - studentsync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  caddy:
    image: caddy:2-alpine
    container_name: studentsync-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      api:
        condition: service_healthy
    networks:
      - studentsync-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/api/v1/health",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  caddy_data:
  caddy_config:

networks:
  studentsync-network:
    driver: bridge
